{"ast":null,"code":"import React,{Suspense}from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import{Provider}from'react-redux';import{store}from'./store/index';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Wall from'./Components/Wall/Wall';import Services from'./Views/services';import Projects from'./Views/projects';import Technologies from'./Views/technologies';import Vacansies from'./Views/vacancies';import Contacts from'./Views/contacts';import Blog from'./Views/blog';import'./18n';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Suspense,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(App,{}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(Wall,{})}),/*#__PURE__*/_jsx(Route,{path:\"services\",element:/*#__PURE__*/_jsx(Services,{})}),/*#__PURE__*/_jsx(Route,{path:\"projects\",element:/*#__PURE__*/_jsx(Projects,{})}),/*#__PURE__*/_jsx(Route,{path:\"technologies\",element:/*#__PURE__*/_jsx(Technologies,{})}),/*#__PURE__*/_jsx(Route,{path:\"vacancies\",element:/*#__PURE__*/_jsx(Vacansies,{})}),/*#__PURE__*/_jsx(Route,{path:\"contacts\",element:/*#__PURE__*/_jsx(Contacts,{})}),/*#__PURE__*/_jsx(Route,{path:\"blog\",element:/*#__PURE__*/_jsx(Blog,{})})]})})})})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","Suspense","ReactDOM","App","reportWebVitals","Provider","store","BrowserRouter","Router","Routes","Route","Wall","Services","Projects","Technologies","Vacansies","Contacts","Blog","jsx","_jsx","jsxs","_jsxs","root","createRoot","document","getElementById","render","children","path","element","index"],"sources":["/Users/alishergaffarov/Desktop/js/test/doodle/src/index.js"],"sourcesContent":["import React, {Suspense}from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Wall from './Components/Wall/Wall';\nimport Services from './Views/services';\nimport Projects from './Views/projects';\nimport Technologies from './Views/technologies';\nimport Vacansies from './Views/vacancies';\nimport Contacts from './Views/contacts';\nimport Blog from './Views/blog';\n\nimport './18n'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <Suspense>\n      <Router>\n          <Routes>\n            <Route path='/' element={<App/>} >\n              <Route index element={<Wall/>} ></Route>\n              <Route path='services' element={<Services/>} ></Route>\n              <Route path='projects' element={<Projects/>} ></Route>\n              <Route path='technologies' element={<Technologies/>} ></Route>\n              <Route path='vacancies' element={<Vacansies/>} ></Route>\n              <Route path='contacts' element={<Contacts/>} ></Route>\n              <Route path='blog' element={<Blog/>} ></Route>\n            </Route>\n          </Routes>\n      </Router>\n    </Suspense>\n  </Provider>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAM,OAAO,CACpC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,KAAK,KAAQ,eAAe,CACrC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAE/B,MAAO,OAAO,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGd,GAAM,CAAAC,IAAI,CAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTP,IAAA,CAACd,QAAQ,EAACC,KAAK,CAAEA,KAAM,CAAAqB,QAAA,cACrBR,IAAA,CAAClB,QAAQ,EAAA0B,QAAA,cACPR,IAAA,CAACX,MAAM,EAAAmB,QAAA,cACHR,IAAA,CAACV,MAAM,EAAAkB,QAAA,cACLN,KAAA,CAACX,KAAK,EAACkB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEV,IAAA,CAAChB,GAAG,IAAG,CAAAwB,QAAA,eAC9BR,IAAA,CAACT,KAAK,EAACoB,KAAK,MAACD,OAAO,cAAEV,IAAA,CAACR,IAAI,IAAG,EAAU,cACxCQ,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEV,IAAA,CAACP,QAAQ,IAAG,EAAU,cACtDO,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEV,IAAA,CAACN,QAAQ,IAAG,EAAU,cACtDM,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAC,cAAc,CAACC,OAAO,cAAEV,IAAA,CAACL,YAAY,IAAG,EAAU,cAC9DK,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEV,IAAA,CAACJ,SAAS,IAAG,EAAU,cACxDI,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEV,IAAA,CAACH,QAAQ,IAAG,EAAU,cACtDG,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAC,MAAM,CAACC,OAAO,cAAEV,IAAA,CAACF,IAAI,IAAG,EAAU,GACxC,EACD,EACJ,EACA,EACF,CACZ,CAED;AACA;AACA;AACAb,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}